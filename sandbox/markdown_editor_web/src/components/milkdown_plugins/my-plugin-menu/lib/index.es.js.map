{"version":3,"file":"index.es.js","sources":["../src/default-config.ts","../src/button.ts","../src/divider.ts","../src/select.ts","../src/manager.ts","../src/menubar.ts","../src/index.ts"],"sourcesContent":["/* Copyright 2021, Milkdown by Mirone. */\n\nimport { createCmdKey } from '@milkdown/core';\nimport { Redo, Undo } from '@milkdown/plugin-history';\nimport {\n    InsertHr,\n    InsertImage,\n    InsertTable,\n    LiftListItem,\n    SinkListItem,\n    ToggleBold,\n    ToggleItalic,\n    ToggleLink,\n    ToggleStrikeThrough,\n    TurnIntoCodeFence,\n    TurnIntoHeading,\n    TurnIntoTaskList,\n    WrapInBlockquote,\n    WrapInBulletList,\n    WrapInOrderedList,\n} from '@milkdown/preset-gfm';\nimport {\n    EditorState,\n    EditorView,\n    liftListItem,\n    MarkType,\n    redo,\n    setBlockType,\n    sinkListItem,\n    TextSelection,\n    undo,\n    wrapIn,\n} from '@milkdown/prose';\n\nimport { ButtonConfig } from './button';\nimport { SelectConfig } from './select';\n\nexport type CommonConfig = {\n    disabled?: (view: EditorView) => boolean;\n};\n\nexport type ConfigItem = SelectConfig | ButtonConfig;\n\nexport type Config = Array<Array<ConfigItem>>;\n\nconst hasMark = (state: EditorState, type: MarkType): boolean => {\n    if (!type) return false;\n    const { from, $from, to, empty } = state.selection;\n    if (empty) {\n        return !!type.isInSet(state.storedMarks || $from.marks());\n    }\n    return state.doc.rangeHasMark(from, to, type);\n};\n\nexport const SelectParent = createCmdKey();\nexport const defaultConfig: Config = [\n    [\n        {\n            type: 'select',\n            text: 'Heading',\n            options: [\n                { id: '1', text: 'Large Heading' },\n                { id: '2', text: 'Medium Heading' },\n                { id: '3', text: 'Small Heading' },\n            ],\n            disabled: (view) => {\n                const { state } = view;\n                const setToHeading = (level: number) => setBlockType(state.schema.nodes.heading, { level })(state);\n                return (\n                    !(view.state.selection instanceof TextSelection) ||\n                    !(setToHeading(1) || setToHeading(2) || setToHeading(3))\n                );\n            },\n            onSelect: (id) => [TurnIntoHeading, Number(id)],\n        },\n    ],\n    [\n        {\n            type: 'button',\n            icon: 'undo',\n            key: Undo,\n            disabled: (view) => {\n                return !undo(view.state);\n            },\n        },\n        {\n            type: 'button',\n            icon: 'redo',\n            key: Redo,\n            disabled: (view) => {\n                return !redo(view.state);\n            },\n        },\n    ],\n    [\n        {\n            type: 'button',\n            icon: 'bold',\n            key: ToggleBold,\n            active: (view) => hasMark(view.state, view.state.schema.marks.strong),\n            disabled: (view) => !view.state.schema.marks.strong,\n        },\n        {\n            type: 'button',\n            icon: 'italic',\n            key: ToggleItalic,\n            active: (view) => hasMark(view.state, view.state.schema.marks.em),\n            disabled: (view) => !view.state.schema.marks.em,\n        },\n        {\n            type: 'button',\n            icon: 'strikeThrough',\n            key: ToggleStrikeThrough,\n            active: (view) => hasMark(view.state, view.state.schema.marks.strike_through),\n            disabled: (view) => !view.state.schema.marks.strike_through,\n        },\n    ],\n    [\n        {\n            type: 'button',\n            icon: 'bulletList',\n            key: WrapInBulletList,\n            disabled: (view) => {\n                const { state } = view;\n                return !wrapIn(state.schema.nodes.bullet_list)(state);\n            },\n        },\n        {\n            type: 'button',\n            icon: 'orderedList',\n            key: WrapInOrderedList,\n            disabled: (view) => {\n                const { state } = view;\n                return !wrapIn(state.schema.nodes.ordered_list)(state);\n            },\n        },\n        {\n            type: 'button',\n            icon: 'taskList',\n            key: TurnIntoTaskList,\n            disabled: (view) => {\n                const { state } = view;\n                return !wrapIn(state.schema.nodes.task_list_item)(state);\n            },\n        },\n        {\n            type: 'button',\n            icon: 'liftList',\n            key: LiftListItem,\n            disabled: (view) => {\n                const { state } = view;\n                return !liftListItem(state.schema.nodes.list_item)(state);\n            },\n        },\n        {\n            type: 'button',\n            icon: 'sinkList',\n            key: SinkListItem,\n            disabled: (view) => {\n                const { state } = view;\n                return !sinkListItem(state.schema.nodes.list_item)(state);\n            },\n        },\n    ],\n    [\n        {\n            type: 'button',\n            icon: 'link',\n            key: ToggleLink,\n            active: (view) => hasMark(view.state, view.state.schema.marks.link),\n        },\n        {\n            type: 'button',\n            icon: 'image',\n            key: InsertImage,\n        },\n        {\n            type: 'button',\n            icon: 'table',\n            key: InsertTable,\n        },\n        {\n            type: 'button',\n            icon: 'code',\n            key: TurnIntoCodeFence,\n        },\n    ],\n    [\n        {\n            type: 'button',\n            icon: 'quote',\n            key: WrapInBlockquote,\n        },\n        {\n            type: 'button',\n            icon: 'divider',\n            key: InsertHr,\n        },\n        {\n            type: 'button',\n            icon: 'select',\n            key: SelectParent,\n        },\n    ],\n];\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { CmdKey, commandsCtx, Ctx } from '@milkdown/core';\nimport type { Icon } from '@milkdown/design-system';\nimport type { EditorView } from '@milkdown/prose';\nimport type { Utils } from '@milkdown/utils';\n\nimport type { CommonConfig } from './default-config';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ButtonConfig<T = any> = {\n    type: 'button';\n    icon: Icon;\n    active?: (view: EditorView) => boolean;\n    key: CmdKey<T>;\n    options?: T;\n} & CommonConfig;\n\nexport const button = (utils: Utils, config: ButtonConfig, ctx: Ctx) => {\n    const buttonStyle = utils.getStyle((themeTool, { css }) => {\n        return css`\n            border: 0;\n            box-sizing: unset;\n            width: 1.5rem;\n            height: 1.5rem;\n            padding: 0.25rem;\n            margin: 0.5rem;\n            flex-shrink: 0;\n\n            display: flex;\n            justify-content: center;\n            align-items: center;\n\n            background-color: ${themeTool.palette('surface')};\n            color: ${themeTool.palette('solid')};\n            transition: all 0.4s ease-in-out;\n\n            cursor: pointer;\n\n            &.active,\n            &:hover {\n                background-color: ${themeTool.palette('secondary', 0.12)};\n                color: ${themeTool.palette('primary')};\n            }\n\n            &:disabled {\n                display: none;\n            }\n        `;\n    });\n\n    const $button = document.createElement('button');\n    $button.setAttribute('type', 'button');\n    $button.classList.add('button');\n    if (buttonStyle) {\n        $button.classList.add(buttonStyle);\n    }\n    const $label = utils.themeTool.slots.label(config.icon);\n    if ($label) {\n        $button.setAttribute('aria-label', $label);\n        $button.setAttribute('title', $label);\n    }\n    const $icon = utils.themeTool.slots.icon(config.icon);\n    $button.appendChild($icon);\n    $button.addEventListener('mousedown', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        ctx.get(commandsCtx).call(config.key, config.options);\n    });\n    return $button;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Utils } from '@milkdown/utils';\n\nexport type DividerConfig = {\n    type: 'divider';\n    group: HTMLElement[];\n};\nexport const divider = (utils: Utils) => {\n    const dividerStyle = utils.getStyle((themeTool, { css }) => {\n        return css`\n            flex-shrink: 0;\n            width: ${themeTool.size.lineWidth};\n            background-color: ${themeTool.palette('line')};\n            margin: 0.75rem 1rem;\n        `;\n    });\n    const $divider = document.createElement('div');\n    $divider.classList.add('divider');\n    if (dividerStyle) {\n        $divider.classList.add(dividerStyle);\n    }\n    return $divider;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { CmdKey, commandsCtx, Ctx } from '@milkdown/core';\nimport { EditorView } from '@milkdown/prose';\nimport { Utils } from '@milkdown/utils';\n\nimport type { CommonConfig } from './default-config';\n\ntype SelectOptions = {\n    id: string;\n    text: string;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type SelectConfig<T = any> = {\n    type: 'select';\n    text: string;\n    options: SelectOptions[];\n    active?: (view: EditorView) => string;\n    onSelect: (id: string, view: EditorView) => [key: CmdKey<T>, info?: T];\n} & CommonConfig;\n\nexport const select = (utils: Utils, config: SelectConfig, ctx: Ctx, view: EditorView) => {\n    const selectStyle = utils.getStyle((themeTool, { css }) => {\n        return css`\n            flex-shrink: 0;\n            font-weight: 500;\n            font-size: 0.875rem;\n\n            ${themeTool.mixin.border('right')};\n            ${themeTool.mixin.border('left')};\n\n            .menu-selector {\n                border: 0;\n                box-sizing: unset;\n                cursor: pointer;\n                font: inherit;\n                text-align: left;\n                justify-content: space-between;\n                align-items: center;\n                color: ${themeTool.palette('neutral', 0.87)};\n                display: flex;\n                padding: 0.25rem 0.5rem;\n                margin: 0.5rem;\n                background: ${themeTool.palette('secondary', 0.12)};\n                width: 10.375rem;\n\n                &:disabled {\n                    display: none;\n                }\n            }\n\n            .menu-selector-value {\n                flex: 1;\n                white-space: nowrap;\n                text-overflow: ellipsis;\n            }\n\n            .menu-selector-list {\n                width: calc(12.375rem);\n                position: absolute;\n                top: 3rem;\n                background: ${themeTool.palette('surface')};\n                ${themeTool.mixin.border()};\n                ${themeTool.mixin.shadow()};\n                border-bottom-left-radius: ${themeTool.size.radius};\n                border-bottom-right-radius: ${themeTool.size.radius};\n                z-index: 3;\n            }\n\n            .menu-selector-list-item {\n                background-color: transparent;\n                border: 0;\n                cursor: pointer;\n                display: block;\n                font: inherit;\n                text-align: left;\n                padding: 0.75rem 1rem;\n                line-height: 1.5rem;\n                width: 100%;\n                color: ${themeTool.palette('neutral', 0.87)};\n\n                &:hover {\n                    background: ${themeTool.palette('secondary', 0.12)};\n                    color: ${themeTool.palette('primary')};\n                }\n            }\n\n            &.fold {\n                border-color: transparent;\n\n                .menu-selector {\n                    background: unset;\n                }\n\n                .menu-selector-list {\n                    display: none;\n                }\n            }\n        `;\n    });\n\n    const selectorWrapper = document.createElement('div');\n    selectorWrapper.classList.add('menu-selector-wrapper', 'fold');\n\n    const selector = document.createElement('button');\n    selector.setAttribute('type', 'button');\n    selector.classList.add('menu-selector', 'fold');\n    selector.addEventListener('mousedown', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        selectorWrapper.classList.toggle('fold');\n        selectorList.style.left = `${\n            selectorWrapper.getBoundingClientRect().left - view.dom.getBoundingClientRect().left\n        }px`;\n    });\n    view.dom.addEventListener('click', () => {\n        selectorWrapper.classList.add('fold');\n    });\n\n    const selectorValue = document.createElement('span');\n    selectorValue.classList.add('menu-selector-value');\n    selectorValue.textContent = config.text;\n\n    const selectorButton = utils.themeTool.slots.icon('downArrow');\n    selectorButton.setAttribute('aria-hidden', 'true');\n\n    selectorWrapper.appendChild(selector);\n    selector.appendChild(selectorValue);\n    selector.appendChild(selectorButton);\n\n    const selectorList = document.createElement('div');\n    selectorList.classList.add('menu-selector-list');\n    config.options.forEach((option) => {\n        const selectorListItem = document.createElement('button');\n        selectorListItem.setAttribute('type', 'button');\n        selectorListItem.dataset.id = option.id;\n        selectorListItem.textContent = option.text;\n        selectorListItem.classList.add('menu-selector-list-item');\n        selectorList.appendChild(selectorListItem);\n    });\n\n    selectorList.addEventListener('mousedown', (e) => {\n        const { target } = e;\n        if (target instanceof HTMLButtonElement && target.dataset.id) {\n            ctx.get(commandsCtx).call(...config.onSelect(target.dataset.id, view));\n            selectorWrapper.classList.add('fold');\n        }\n    });\n\n    selectorWrapper.appendChild(selectorList);\n\n    if (selectStyle) {\n        selectorWrapper.classList.add(selectStyle);\n    }\n\n    return selectorWrapper;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Ctx } from '@milkdown/core';\nimport { EditorView } from '@milkdown/prose';\nimport { Utils } from '@milkdown/utils';\n\nimport { button, ButtonConfig } from './button';\nimport { Config, ConfigItem } from './default-config';\nimport { divider, DividerConfig } from './divider';\nimport { select, SelectConfig } from './select';\n\ntype InnerConfig = (ConfigItem | DividerConfig) & { $: HTMLElement };\n\nexport class Manager {\n    private config: InnerConfig[];\n\n    constructor(originalConfig: Config, private utils: Utils, private ctx: Ctx, menu: HTMLElement, view: EditorView) {\n        this.config = originalConfig\n            .map((xs) =>\n                xs.map((x) => ({\n                    ...x,\n                    $: this.$create(x, view),\n                })),\n            )\n            .map((xs, i): Array<InnerConfig> => {\n                if (i === originalConfig.length - 1) {\n                    return xs;\n                }\n                const dividerConfig: DividerConfig = {\n                    type: 'divider',\n                    group: xs.map((x) => x.$),\n                };\n                return [...xs, { ...dividerConfig, $: this.$create(dividerConfig, view) }];\n            })\n            .flat();\n        this.config.forEach((x) => menu.appendChild(x.$));\n    }\n\n    public update(view: EditorView) {\n        this.config.forEach((config) => {\n            if (config.type === 'button') {\n                if (config.active) {\n                    const active = config.active(view);\n                    if (active) {\n                        config.$.classList.add('active');\n                    } else {\n                        config.$.classList.remove('active');\n                    }\n                }\n                if (config.disabled) {\n                    const disabled = config.disabled(view);\n                    if (disabled) {\n                        config.$.setAttribute('disabled', 'true');\n                    } else {\n                        config.$.removeAttribute('disabled');\n                    }\n                }\n                return;\n            }\n\n            if (config.type === 'select') {\n                if (config.disabled) {\n                    const disabled = config.disabled(view);\n                    if (disabled) {\n                        config.$.classList.add('disabled');\n                        config.$.children[0].setAttribute('disabled', 'true');\n                    } else {\n                        config.$.classList.remove('disabled');\n                        config.$.children[0].removeAttribute('disabled');\n                    }\n                }\n            }\n\n            if (config.type === 'divider') {\n                const disabled = config.group.every(\n                    (x) => x.getAttribute('disabled') || x.classList.contains('disabled'),\n                );\n                if (disabled) {\n                    config.$.classList.add('disabled');\n                } else {\n                    config.$.classList.remove('disabled');\n                }\n            }\n        });\n    }\n\n    private $create(item: ButtonConfig | DividerConfig | SelectConfig, view: EditorView): HTMLElement {\n        const { utils, ctx } = this;\n\n        switch (item.type) {\n            case 'button': {\n                const $ = button(utils, item, ctx);\n                return $;\n            }\n            case 'select': {\n                const $ = select(utils, item, ctx, view);\n                return $;\n            }\n            case 'divider': {\n                const $ = divider(utils);\n                return $;\n            }\n            default:\n                throw new Error();\n        }\n    }\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { EditorView } from '@milkdown/prose';\nimport { Utils } from '@milkdown/utils';\n\nexport const menubar = (utils: Utils, view: EditorView) => {\n    const editorWrapperStyle = utils.getStyle((themeTool) => {\n        return themeTool.mixin.scrollbar('y');\n    });\n    const menuStyle = utils.getStyle((themeTool, { css }) => {\n        const border = themeTool.mixin.border();\n        const scrollbar = themeTool.mixin.scrollbar('x');\n        const style = css`\n            box-sizing: border-box;\n            width: 100%;\n            display: flex;\n            flex-wrap: nowrap;\n            overflow-x: auto;\n            ${border};\n            ${scrollbar};\n            background: ${themeTool.palette('surface')};\n\n            -webkit-overflow-scrolling: auto;\n\n            .disabled {\n                display: none;\n            }\n        `;\n        return style;\n    });\n\n    const menuWrapper = document.createElement('div');\n    const menu = document.createElement('div');\n    menu.classList.add('milkdown-menu');\n    menuWrapper.appendChild(menu);\n    menuWrapper.classList.add('milkdown-menu-wrapper');\n    if (menuStyle) {\n        menuStyle.split(' ').forEach((x) => menu.classList.add(x));\n    }\n\n    const editorDom = view.dom;\n    if (editorWrapperStyle) {\n        editorDom.classList.add(editorWrapperStyle);\n    }\n\n    const milkdown = editorDom.parentElement;\n    if (!milkdown) {\n        throw new Error('No parent node found');\n    }\n    const root = milkdown.parentElement;\n    if (!root) {\n        throw new Error('No root node found');\n    }\n    root.replaceChild(menuWrapper, milkdown);\n    // milkdown.appendChild(milkdown);\n    // milkdown.replaceChild(menuWrapper, editorDom);\n    menuWrapper.appendChild(milkdown);\n\n    return menu;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd } from '@milkdown/core';\nimport { Plugin, PluginKey, selectParentNode } from '@milkdown/prose';\nimport { createPlugin } from '@milkdown/utils';\n\nimport { Config, defaultConfig, SelectParent } from './default-config';\nimport { Manager } from './manager';\nimport { menubar } from './menubar';\n\nexport const menuKey = new PluginKey('milkdown-menu');\n\nexport type Options = {\n    config: Config;\n};\n\nexport const menu = createPlugin<string, Options>((utils, options) => {\n    const config = options?.config ?? defaultConfig;\n    return {\n        commands: () => [createCmd(SelectParent, () => selectParentNode)],\n        prosePlugins: (_, ctx) => {\n            const plugin = new Plugin({\n                key: menuKey,\n                view: (editorView) => {\n                    const menu = menubar(utils, editorView);\n\n                    const manager = new Manager(config, utils, ctx, menu, editorView);\n\n                    return {\n                        update: (view) => {\n                            manager.update(view);\n                        },\n                    };\n                },\n            });\n\n            return [plugin];\n        },\n    };\n});\n"],"names":[],"mappings":"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"}